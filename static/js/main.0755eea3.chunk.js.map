{"version":3,"sources":["client/providers/GameContextProvider.tsx","client/containers/SnakeBoard.tsx","client/components/Modal.tsx","client/containers/SnakeImage.tsx","client/containers/Lobby.tsx","client/containers/Multiplayer.tsx","settings.ts","client/containers/JoinGame.tsx","client/containers/HomeScreen.tsx","client/containers/ScoreBoard.tsx","client/containers/ResultsScreen.tsx","client/containers/GameScreen.tsx","client/App.tsx","index.tsx"],"names":["InitialState","playerId","roomDetails","winnerPlayerId","gameOver","gameState","reset","reducer","state","action","WrappedComponent","GameContext","createContext","dispatch","socket","GameContextProvider","children","useMemo","io","useReducer","handleSetGameState","_state","parsedState","JSON","parse","React","useEffect","on","id","alert","Provider","value","useGameContext","useContext","SnakeBoard","snakeBoardRef","useRef","document","createElement","useLayoutEffect","current","focus","context","getContext","setTransform","scale","clearRect","canvasSize","fillStyle","fillRect","players","forEach","color","snake","status","x","y","food","foodColor","tabIndex","onKeyDown","event","emit","key","style","border","ref","width","height","Modal","className","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","SnakeImage","src","alt","Lobby","shareLink","url","URL","window","location","href","searchParams","set","roomId","handleCopy","el","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","readOnly","onClick","backgroundColor","open","connectedPlayers","noOfPlayers","Multiplayer","onCancel","useState","name","setName","setNoOfPlayers","handleSetNoOfPlayers","target","onChange","onBlur","selection","count","push","renderSelection","trim","JoinGame","roomIdParam","setRoomId","HomeScreen","showMulti","setShowMulti","showJoin","setShowJoin","URLSearchParams","search","get","ScoreBoard","activePlayers","inactivePlayers","player","rankedActivePlayers","sort","a","b","score","rankedInactivePlayers","length","map","textDecoration","ResultsScreen","isSinglePlayer","justifyContent","GameScreen","playerData","filter","withGameContext","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0755eea3.chunk.js","sourcesContent":["import React, { useReducer, createContext, useMemo, useContext } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\nimport { GameState, RoomDetails } from '../../types';\n\ntype GameContextState = {\n\tplayerId: number | null;\n\troomDetails: RoomDetails | null;\n\twinnerPlayerId: number | null;\n\tgameOver: boolean;\n\tgameState: GameState | null;\n\treset: boolean;\n};\n\nconst InitialState: GameContextState = {\n\tplayerId: null,\n\troomDetails: null,\n\twinnerPlayerId: null,\n\tgameOver: false,\n\tgameState: null,\n\treset: false\n};\n\ntype GameContextProps = {\n\tstate: GameContextState;\n\tdispatch: React.Dispatch<Partial<GameContextState>>;\n\tsocket: Socket | null;\n\treset: () => void;\n};\n\nfunction reducer(state: GameContextState, action: Partial<GameContextState>) {\n\treturn {\n\t\t...state,\n\t\t...action\n\t};\n}\n\nconst GameContext = createContext<GameContextProps>({\n\tstate: InitialState,\n\tdispatch: () => null,\n\tsocket: null,\n\treset: () => null\n});\n\ntype GameContextProviderProps = {\n\tchildren: React.ReactNode;\n};\nconst GameContextProvider = ({ children }: GameContextProviderProps) => {\n\tconst socket = useMemo(() => io('http://localhost:4000'), []);\n\n\tconst [state, dispatch] = useReducer(reducer, InitialState);\n\n\tconst handleSetGameState = (_state: string) => {\n\t\tconst parsedState = (JSON.parse(_state) as GameState) || null;\n\t\tdispatch({ gameState: parsedState });\n\t};\n\n\tReact.useEffect(() => {\n\t\tsocket.on('init', (id: string) => dispatch({ playerId: +id }));\n\t\tsocket.on('room_details', (roomDetails: any) => {\n\t\t\tdispatch({ roomDetails });\n\t\t});\n\t\tsocket.on('game_state', handleSetGameState);\n\t\tsocket.on('game_over', (_state: string) =>\n\t\t\tdispatch({ gameOver: true, gameState: JSON.parse(_state) })\n\t\t);\n\n\t\tsocket.on('invalid_room', () => alert('Invalid room!'));\n\t\tsocket.on('room_full', () => alert('Room already full!'));\n\t}, [socket]);\n\n\tconst reset = () => dispatch(InitialState);\n\n\treturn (\n\t\t<>\n\t\t\t{socket && (\n\t\t\t\t<GameContext.Provider value={{ state, dispatch, socket, reset }}>\n\t\t\t\t\t{children}\n\t\t\t\t</GameContext.Provider>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport const useGameContext = (): GameContextProps => useContext(GameContext);\n\nexport const withGameContext = (WrappedComponent: React.ElementType) => () => {\n\treturn (\n\t\t<GameContextProvider>\n\t\t\t<WrappedComponent />\n\t\t</GameContextProvider>\n\t);\n};\n\nexport default GameContextProvider;\n","import React, { useRef, useEffect, KeyboardEvent } from 'react';\nimport { useGameContext } from 'client/providers';\n\nconst SnakeBoard = (): JSX.Element => {\n\tconst snakeBoardRef = useRef<HTMLCanvasElement>(\n\t\tdocument.createElement('canvas')\n\t);\n\n\tReact.useLayoutEffect(() => {\n\t\tsnakeBoardRef.current.focus();\n\t}, []);\n\n\tconst { state, socket } = useGameContext();\n\tconst { gameState } = state;\n\n\tuseEffect(() => {\n\t\tif (snakeBoardRef.current) {\n\t\t\t// if (!gameOver && !!snakeBoardRef?.current) {\n\t\t\tconst context = snakeBoardRef.current.getContext('2d');\n\t\t\tif (context) {\n\t\t\t\tif (gameState) {\n\t\t\t\t\tcontext.setTransform(gameState.scale, 0, 0, gameState.scale, 0, 0);\n\t\t\t\t\tcontext.clearRect(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tgameState.canvasSize[0],\n\t\t\t\t\t\tgameState.canvasSize[1]\n\t\t\t\t\t);\n\t\t\t\t\tcontext.fillStyle = '#aed565';\n\t\t\t\t\tcontext.fillRect(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tgameState.canvasSize[0],\n\t\t\t\t\t\tgameState.canvasSize[1]\n\t\t\t\t\t);\n\n\t\t\t\t\tgameState.players.forEach(({ color, snake, status }) => {\n\t\t\t\t\t\tif (status) {\n\t\t\t\t\t\t\tcontext.fillStyle = color;\n\t\t\t\t\t\t\tsnake.forEach(([x, y]) => context.fillRect(x, y, 1, 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tconst { food } = gameState;\n\t\t\t\t\tcontext.fillStyle = gameState.foodColor;\n\t\t\t\t\tcontext.fillRect(food[0], food[1], 1, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [gameState]);\n\n\tconst handleKeyDown = (event: KeyboardEvent) => {\n\t\treturn socket?.emit('keydown', event.key);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t{gameState && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<canvas\n\t\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\t\tstyle={{ border: '5px solid #75923e' }}\n\t\t\t\t\t\t\tref={snakeBoardRef}\n\t\t\t\t\t\t\twidth={state.gameState?.canvasSize[0]}\n\t\t\t\t\t\t\theight={state.gameState?.canvasSize[1]}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default SnakeBoard;\n","import React from 'react';\n\nexport const Modal = () => {\n\treturn (\n\t\t<div\n\t\t\tclassName=\"modal fade\"\n\t\t\tid=\"exampleModal\"\n\t\t\ttabIndex={-1}\n\t\t\trole=\"dialog\"\n\t\t\taria-labelledby=\"exampleModalLabel\"\n\t\t\taria-hidden=\"true\"\n\t\t>\n\t\t\t<div className=\"modal-dialog\" role=\"document\">\n\t\t\t\t<div className=\"modal-content\">\n\t\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t\t<h5 className=\"modal-title\" id=\"exampleModalLabel\">\n\t\t\t\t\t\t\tModal title\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"modal-body\">...</div>\n\t\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-secondary\"\n\t\t\t\t\t\t\tdata-dismiss=\"modal\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tClose\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\">\n\t\t\t\t\t\t\tSave changes\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Modal;\n","import React from 'react';\n\nconst SnakeImage = () => {\n\treturn <img src=\"/snake.png\" alt=\"snake\" />;\n};\n\nexport default SnakeImage;\n","import { useGameContext } from 'client/providers';\nimport React, { useMemo } from 'react';\nimport SnakeImage from './SnakeImage';\n\nconst Lobby = () => {\n\tconst { state } = useGameContext();\n\tconst roomDetails = state?.roomDetails;\n\tconst shareLink = useMemo(() => {\n\t\tconst url = new URL(window.location.href);\n\t\turl.searchParams.set('id', `${roomDetails?.roomId}`);\n\t\treturn url.href;\n\t}, [roomDetails]);\n\n\tconst handleCopy = (value: string) => {\n\t\tif (value !== '') {\n\t\t\tconst el = document.createElement('input');\n\t\t\tel.value = value;\n\t\t\tel.setAttribute('readonly', '');\n\t\t\tel.style.position = 'absolute';\n\t\t\tel.style.left = '-9999px';\n\t\t\tdocument.body.appendChild(el);\n\t\t\tel.select();\n\t\t\tdocument.execCommand('copy');\n\t\t\tdocument.body.removeChild(el);\n\t\t}\n\t};\n\tconst copyLink = () => handleCopy(shareLink);\n\n\tconst copyCode = () => handleCopy(roomDetails?.roomId || '');\n\n\tconst handleShareToFacebook = () => {\n\t\twindow.open(\n\t\t\t`https://www.facebook.com/sharer/sharer.php?u=${shareLink}`,\n\t\t\t'_blank'\n\t\t);\n\t};\n\treturn (\n\t\t<div className=\"vh-100 d-flex justify-content-center align-items-center\">\n\t\t\t<div>\n\t\t\t\t<h3 className=\"d-inline-block\">Invite your friends to play</h3>\n\t\t\t\t<SnakeImage />\n\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t<h4 className=\"text-primary\">Room ID</h4>\n\t\t\t\t\t<div className=\"input-group m-auto\" style={{ width: 300 }}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"form-control form-control-lg\"\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\tvalue={roomDetails?.roomId}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"input-group-append\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tonClick={copyCode}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCopy\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"text-center d-block m-5\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-info\"\n\t\t\t\t\t\t\tonClick={copyLink}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundColor: '4d498f'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCopy Link\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tclassName=\"btn btn-danger mx-3\"\n\t\t\t\t\t\t\tonClick={handleShareToFacebook}\n\t\t\t\t\t\t\tstyle={{ backgroundColor: '#4d498f' }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tShare to facebook\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"mt-5\">Waiting for the other players...</div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<div>\n\t\t\t\t\t\tConnected players:&nbsp;{roomDetails?.connectedPlayers} of{' '}\n\t\t\t\t\t\t{roomDetails?.noOfPlayers}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Lobby;\n","import React from 'react';\nimport { useGameContext } from 'client/providers';\nimport { MAX_PLAYERS_PER_ROOM } from '../../settings';\nimport SnakeImage from './SnakeImage';\n\ntype MultiplayerProps = {\n\tonCancel: () => void;\n};\nconst Multiplayer = ({ onCancel }: MultiplayerProps) => {\n\tconst { socket } = useGameContext();\n\n\tconst [name, setName] = React.useState('');\n\tconst [noOfPlayers, setNoOfPlayers] = React.useState(2);\n\n\t// Render the dropdown from settings\n\tconst renderSelection = (): Array<React.ReactNode> => {\n\t\tconst selection = [];\n\t\tfor (let count = 1; count <= MAX_PLAYERS_PER_ROOM; count++) {\n\t\t\tif (count > 1) {\n\t\t\t\tselection.push(\n\t\t\t\t\t<option key={count} value={count}>\n\t\t\t\t\t\t{count}\n\t\t\t\t\t</option>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn selection;\n\t};\n\n\tconst handleCreateGame = () => {\n\t\tif (name.trim() === '') {\n\t\t\talert('Please enter your name!');\n\t\t} else {\n\t\t\tsocket?.emit('new_game', {\n\t\t\t\tname,\n\t\t\t\tnoOfPlayers\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleSetNoOfPlayers = (\n\t\tevent: React.ChangeEvent<HTMLSelectElement>\n\t) => {\n\t\treturn setNoOfPlayers(+event.target.value);\n\t};\n\n\tconst handleSetName = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\treturn setName(event.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"vh-100 d-flex justify-content-center align-items-center\">\n\t\t\t<div>\n\t\t\t\t<h3 className=\"d-inline-block\">Create a multiplayer game</h3>\n\t\t\t\t<SnakeImage />\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<span className=\"pr-5\">Enter your name</span>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control form-control-lg\"\n\t\t\t\t\t\tonChange={handleSetName}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span className=\"pr-5\">How Many Players?</span>\n\t\t\t\t\t<select\n\t\t\t\t\t\tclassName=\"form-control-lg\"\n\t\t\t\t\t\tonChange={handleSetNoOfPlayers}\n\t\t\t\t\t\tonBlur={handleSetNoOfPlayers}\n\t\t\t\t\t>\n\t\t\t\t\t\t{renderSelection()}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text-center d-block m-5\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-success\"\n\t\t\t\t\t\tonClick={handleCreateGame}\n\t\t\t\t\t>\n\t\t\t\t\t\tCreate Game\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-danger mx-3\"\n\t\t\t\t\t\tonClick={onCancel}\n\t\t\t\t\t>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Multiplayer;\n","/**\n * Snakeboard dimension\n */\nexport const CANVAS_SIZE = [500, 500];\n\n/**\n * Body scale of the the snake\n */\nexport const SCALE = 20;\n\n/**\n * Speed in (ms) of the snake\n */\nexport const SPEED = 100;\n\n/**\n * Speed in (ms) of the snake\n */\nexport const SCORE_POINTING = 10;\nexport const FOOD_COLOR = '#db4949';\nexport const SNAKE_COLORS = ['#4b7b00', '#293498', 'pink'];\nexport const SNAKE_INITIAL_LENGTH = 4;\nexport const SNAKE_OFFSET = [4, 13];\n\nexport const MAX_PLAYERS_PER_ROOM = 3;\n","import { useGameContext } from 'client/providers';\nimport React from 'react';\nimport SnakeImage from './SnakeImage';\n\ntype JoinGameProps = {\n\troomId?: string;\n\tonCancel: () => void;\n};\n\nconst JoinGame = ({ onCancel, roomId: roomIdParam }: JoinGameProps) => {\n\tconst { socket } = useGameContext();\n\n\tconst [name, setName] = React.useState('');\n\tconst [roomId, setRoomId] = React.useState(roomIdParam || '');\n\n\tconst handleSetName = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetName(event.target.value);\n\t};\n\n\tconst handleSetRoomId = (event: React.ChangeEvent<HTMLInputElement>) => {\n\t\tsetRoomId(event.target.value);\n\t};\n\n\tconst handleJoinGame = () => {\n\t\tif (name.trim() === '') {\n\t\t\t// eslint-disable-next-line no-alert\n\t\t\talert('Please enter your name!');\n\t\t} else if (roomId.trim() === '') {\n\t\t\talert('Please the Room ID!');\n\t\t} else {\n\t\t\tsocket?.emit('join_game', {\n\t\t\t\tname,\n\t\t\t\troomId\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"vh-100 d-flex justify-content-center align-items-center\">\n\t\t\t<div>\n\t\t\t\t<h3 className=\"d-inline-block\">Join a Game</h3>\n\t\t\t\t<SnakeImage />\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<span className=\"pr-5\">Enter your name:</span>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"form-control form-control-lg\"\n\t\t\t\t\t\tonChange={handleSetName}\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t\t<span className=\"pr-5\">Room ID</span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={roomId}\n\t\t\t\t\t\t\tclassName=\"form-control form-control-lg\"\n\t\t\t\t\t\t\tonChange={handleSetRoomId}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text-center d-block m-5\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-success\"\n\t\t\t\t\t\tonClick={handleJoinGame}\n\t\t\t\t\t>\n\t\t\t\t\t\tJoin Game\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-danger mx-3\"\n\t\t\t\t\t\tonClick={onCancel}\n\t\t\t\t\t>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default JoinGame;\n","import React, { useMemo, useEffect } from 'react';\nimport { Modal } from '../components';\nimport { useGameContext } from '../providers';\nimport Lobby from './Lobby';\nimport SnakeImage from './SnakeImage';\nimport Multiplayer from './Multiplayer';\nimport JoinGame from './JoinGame';\n\nconst HomeScreen = () => {\n\tconst [showMulti, setShowMulti] = React.useState(false);\n\tconst [showJoin, setShowJoin] = React.useState(false);\n\n\tconst roomIdParam = useMemo(() => {\n\t\treturn new URLSearchParams(window.location.search).get('id');\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (roomIdParam) {\n\t\t\tsetShowJoin(true);\n\t\t}\n\t}, [roomIdParam, showJoin]);\n\n\tconst { state, socket } = useGameContext();\n\n\tconst waitingForOtherPlayers = useMemo(() => {\n\t\tif (state.roomDetails) {\n\t\t\treturn (\n\t\t\t\tstate.roomDetails?.connectedPlayers !== state.roomDetails?.noOfPlayers\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}, [state.roomDetails]);\n\n\tconst handleNewGameClick = () => socket?.emit('new_game');\n\tconst handleMultiplayerClick = () => {\n\t\tsetShowMulti(true);\n\t\tsetShowJoin(false);\n\t};\n\n\tconst handleJoinGameClick = () => {\n\t\tsetShowMulti(false);\n\t\tsetShowJoin(true);\n\t};\n\n\tconst reset = () => {\n\t\tsetShowMulti(false);\n\t\tsetShowJoin(false);\n\t};\n\n\tif (waitingForOtherPlayers) return <Lobby />;\n\tif (showMulti) return <Multiplayer onCancel={reset} />;\n\tif (showJoin) return <JoinGame roomId={roomIdParam || ''} onCancel={reset} />;\n\n\treturn (\n\t\t<div className=\"vh-100 d-flex justify-content-center align-items-center\">\n\t\t\t<div>\n\t\t\t\t<h3 className=\"d-inline-block\">Welcome to Snake Game</h3>\n\t\t\t\t<SnakeImage />\n\t\t\t\t<div className=\"text-center d-block\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-success\"\n\t\t\t\t\t\tonClick={handleNewGameClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tSingle Player\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-success mx-3\"\n\t\t\t\t\t\tonClick={handleMultiplayerClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tMultiplayer\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-success\"\n\t\t\t\t\t\tonClick={handleJoinGameClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tJoin Game\n\t\t\t\t\t</button>\n\t\t\t\t\t<Modal />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default HomeScreen;\n","import React from 'react';\nimport { useGameContext } from '../providers';\nimport { GamePlayer } from '../../types';\n\nconst ScoreBoard = () => {\n\tconst { state } = useGameContext();\n\n\tif (!state) return null;\n\n\tconst { gameState } = state;\n\n\tconst activePlayers: Array<GamePlayer> = [];\n\tconst inactivePlayers: Array<GamePlayer> = [];\n\n\t// Extract players by status\n\t// eslint-disable-next-line no-unused-expressions\n\tgameState?.players.forEach((player) => {\n\t\tif (player.status) {\n\t\t\tactivePlayers.push(player);\n\t\t} else {\n\t\t\tinactivePlayers.push(player);\n\t\t}\n\t});\n\n\t// Sort players based on their score\n\tconst rankedActivePlayers = activePlayers.sort((a, b) => b.score - a.score);\n\tconst rankedInactivePlayers = inactivePlayers.sort(\n\t\t(a, b) => b.score - a.score\n\t);\n\n\tconst players = [...rankedActivePlayers, ...rankedInactivePlayers];\n\n\treturn (\n\t\t<>\n\t\t\t{players.length === 1 ? (\n\t\t\t\t<h3>Your score is: {players[0].score}</h3>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<h3>\n\t\t\t\t\t\t<ol>Scoreboard</ol>\n\t\t\t\t\t</h3>\n\t\t\t\t\t<ol>\n\t\t\t\t\t\t{[...rankedActivePlayers, ...rankedInactivePlayers]?.map(\n\t\t\t\t\t\t\t(player) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={player.id}>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: player.color,\n\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration:\n\t\t\t\t\t\t\t\t\t\t\t\t\t!player?.status && !state.gameOver\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'line-through'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'none'\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{player.name}\n\t\t\t\t\t\t\t\t\t\t</span>{' '}\n\t\t\t\t\t\t\t\t\t\t- {player.score}\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ol>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default ScoreBoard;\n","import React from 'react';\nimport { useGameContext } from 'client/providers';\nimport ScoreBoard from './ScoreBoard';\nimport SnakeImage from './SnakeImage';\n\nconst ResultsScreen = () => {\n\tconst { state, reset, socket } = useGameContext();\n\t// const playerData = state?.gameState?.players?.filter((player) => {\n\t// \treturn player?.id === state.playerId;\n\t// })?.[0] as GamePlayer;\n\tconst players = state?.gameState?.players || [];\n\tconst isSinglePlayer = players.length === 1;\n\tconst handlePlayAgainClick = () => {\n\t\tsocket?.emit('new_game');\n\t\treset();\n\t};\n\treturn (\n\t\t<div\n\t\t\tclassName={`vh-100 d-flex align-items-${\n\t\t\t\tisSinglePlayer ? 'center' : 'start'\n\t\t\t}`}\n\t\t\tstyle={{ justifyContent: 'space-evenly' }}\n\t\t>\n\t\t\t<div className=\"text-center pt-10\">\n\t\t\t\t<SnakeImage />\n\t\t\t\t<h2 className=\"text-center text-danger\">GAME OVER</h2>\n\t\t\t\t<div className=\"pt-5\">\n\t\t\t\t\t<ScoreBoard />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"text-center d-block mt-5\">\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName=\"btn btn-success mr-5\"\n\t\t\t\t\t\tonClick={handlePlayAgainClick}\n\t\t\t\t\t>\n\t\t\t\t\t\tPlay again?\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-success\" onClick={reset}>\n\t\t\t\t\t\tHome\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ResultsScreen;\n","import React from 'react';\nimport { useGameContext } from 'client/providers';\nimport { GamePlayer } from 'types';\nimport SnakeBoard from './SnakeBoard';\nimport ScoreBoard from './ScoreBoard';\nimport ResultsScreen from './ResultsScreen';\n\nconst GameScreen = () => {\n\tconst { state } = useGameContext();\n\tconst playerData = state?.gameState?.players?.filter((player) => {\n\t\treturn player?.id === state.playerId;\n\t})?.[0] as GamePlayer;\n\tconst players = state?.gameState?.players || [];\n\n\tif (state.gameOver) return <ResultsScreen />;\n\treturn (\n\t\t<div\n\t\t\tclassName=\"vh-100 d-flex align-items-center\"\n\t\t\tstyle={{ justifyContent: 'space-evenly' }}\n\t\t>\n\t\t\t<div />\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<SnakeBoard />\n\t\t\t\t<h5 className=\"d-inline-block\" style={{ color: playerData.color }}>\n\t\t\t\t\tYour score: {playerData?.score || 0}\n\t\t\t\t</h5>\n\t\t\t</div>\n\t\t\t<div className=\"pt-5\">\n\t\t\t\t{players.length > 1 && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{!playerData?.status && (\n\t\t\t\t\t\t\t<h3 className=\"text-center text-danger mb-5\">GAME OVER</h3>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<ScoreBoard />\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default GameScreen;\n","import React from 'react';\nimport './App.css';\nimport { GameScreen, HomeScreen } from './containers';\nimport { useGameContext, withGameContext } from './providers';\n\nconst App = (): JSX.Element => {\n\tconst { state } = useGameContext();\n\treturn (\n\t\t<div>{state.gameState === null ? <HomeScreen /> : <GameScreen />}</div>\n\t);\n};\n\nexport default withGameContext(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'client/App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}